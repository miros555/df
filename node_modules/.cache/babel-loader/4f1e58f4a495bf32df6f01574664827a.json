{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/App.js\";\nimport React, { Component } from 'react'; //import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\n\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react'; //import {requestSuccess,request,requestError,fetchList} from '../actions';\n\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\nimport Category from './Category';\nimport AddCategory from './AddCategory';\nimport EditCategory from './EditCategory';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //import {fetchList} from '../actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchList = () => {\n      fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.addList = value => {\n      this.setState({\n        data: [...this.state.data, value]\n      });\n      this.fetchList();\n    };\n\n    this.newList = () => {\n      this.fetchList();\n      this.forceUpdate();\n      this.setState({\n        onOpenEdit: false\n      });\n    };\n\n    this.removeElement = value => {\n      this.setState({\n        data: this.state.data.filter(el => el._id !== value)\n      });\n    };\n\n    this.updateRecipeId = value => {\n      this.setState({\n        recipeId: value\n      });\n    };\n\n    this.sendData = () => {\n      const listPost = {\n        title: this.state.title,\n        text: this.state.text,\n        categoryId: this.state.categoryId\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(listPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }; //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.setState({\n          categoryId: '',\n          title: '',\n          text: ''\n        });\n      });\n    };\n\n    this.deleteCategory = value => {\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/' + value;\n      var option = {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n      });\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visibleInputCategory: !this.state.visibleInputCategory\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      recipeId: '',\n      categoryDeleteId: '',\n      visibleInputCategory: false,\n      onOpenAdd: false,\n      onOpenEdit: false\n    };\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    this.fetchList();\n  }\n\n  render() {\n    let list = this.state.data;\n    let recipeId = this.state.recipeId;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"AdminPanel\")), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.title), ' ', \">>\", ' ', this.state.visibleInputCategory ? React.createElement(AddCategory, {\n      addList: this.addList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : '', !this.state.visibleInputCategory ? React.createElement(Button, {\n      style: {\n        marginLeft: 350\n      },\n      positive: true,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), \"Add New Category\") : React.createElement(Button, {\n      style: {\n        marginLeft: 350\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), list.map((el, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          width: 350\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, el._id), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"/\" + el._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.setState({\n          title: el.title\n        }),\n        style: {\n          width: 230\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#2874A6'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, el.title))), React.createElement(Button, {\n        positive: true,\n        onClick: () => this.setState({\n          categoryId: el._id,\n          title: el.title,\n          onOpenAdd: true,\n          onOpenEdit: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"New Recipe\"), React.createElement(Button, {\n        onClick: () => this.setState({\n          categoryId: el._id,\n          onOpenEdit: true,\n          onOpenAdd: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: () => {\n          this.setState({\n            categoryDeleteId: el._id\n          });\n          this.deleteCategory(el._id);\n          this.removeElement(el._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), this.state.onOpenAdd && el._id === this.state.categoryId ? React.createElement(AddRecipe, {\n        categoryId: this.state.categoryId,\n        fetchList: this.fetchList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }) : '', this.state.onOpenEdit && el._id === this.state.categoryId ? React.createElement(EditCategory, {\n        title: el.title,\n        categoryId: this.state.categoryId,\n        newList: this.newList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }) : '', React.createElement(Route, {\n        path: \"/\" + el._id,\n        render: () => React.createElement(Category, {\n          updateRecipeId: this.updateRecipeId,\n          categoryId: el._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }));\n    })), React.createElement(Route, {\n      path: \"/recipe/\" + recipeId,\n      render: () => React.createElement(Recipe, {\n        recipeId: recipeId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/App.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","AddRecipe","Recipe","Category","AddCategory","EditCategory","BrowserRouter","Router","Route","Switch","App","constructor","props","fetchList","fetch","then","res","json","data","console","log","setState","addList","value","state","newList","forceUpdate","onOpenEdit","removeElement","filter","el","_id","updateRecipeId","recipeId","sendData","listPost","title","text","categoryId","qUrl","option","method","body","JSON","stringify","headers","deleteCategory","onChangeInput","e","name","target","toggle","visibleInputCategory","posts","error","isLoaded","categoryDeleteId","onOpenAdd","componentDidMount","render","list","marginLeft","map","index","width","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n//import {requestSuccess,request,requestError,fetchList} from '../actions';\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\nimport Category from './Category';\nimport AddCategory from './AddCategory';\nimport EditCategory from './EditCategory';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n//import {fetchList} from '../actions';\n\n\nclass App extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  recipeId:'',\n  categoryDeleteId:'',\n  visibleInputCategory:false,\n  onOpenAdd:false,\n  onOpenEdit:false\n }\n\n}\n\n\nfetchList = () => {\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n          .then((res) => { return res.json() })\n          .then((data) => {\n              console.log(data);\n              this.setState({ data });\n              });\n        }\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  this.fetchList();\n}\n\naddList = (value) => {\n  this.setState({data:[...this.state.data, value]});\n  this.fetchList();\n}\n\nnewList = () => {\n  this.fetchList();\n  this.forceUpdate();\n  this.setState({onOpenEdit:false})\n\n}\n\nremoveElement = (value) => {\n    this.setState({\n        data: this.state.data.filter(el => el._id !== value)\n    })\n}\n\nupdateRecipeId = (value) => {\n     this.setState({recipeId: value})\n\n}\n\nsendData = () => {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.state.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n\ndeleteCategory = (value) => {\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/'+value;\n  var option = {\n    method: \"DELETE\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n  };\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n    })\n}\n\n  onChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visibleInputCategory:!this.state.visibleInputCategory})\n  }\n\n\n\nrender(){\n\n    let list = this.state.data;\n    let recipeId = this.state.recipeId;\n\n  return (\n\n<Router>\n\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n    <h2>AdminPanel</h2>\n      </header>\n\n\n{/*this.state.categoryId*/}\n<b>{this.state.title}</b>{' '}>>{' '}\n{this.state.visibleInputCategory ? <AddCategory addList={this.addList}/> : ''}\n\n{/*{this.state.onOpen ? <AddRecipe categoryId={this.state.categoryId} /> : ''}\n*/}\n\n{!this.state.visibleInputCategory?<Button style={{marginLeft:350}} positive onClick={this.toggle}>\n<Icon name='plus' />Add New Category</Button>:\n<Button style={{marginLeft:350}} onClick={this.toggle}>\n<Icon name='times' /></Button>}\n\n\n{list.map((el,index)=>{return <li key={index}>\n<span style={{width:350}}>{el._id}</span><br/>\n\n<a href={\"/\"+el._id}>\n<Button onClick={()=>this.setState({title:el.title})} style={{width:230}}>{/*{el.title}*/}\n<span style={{color:'#2874A6'}}>{el.title}</span></Button></a>\n\n\n<Button positive onClick={()=>this.setState({categoryId:el._id,\n                   title:el.title, onOpenAdd:true,onOpenEdit:false})}>\n <Icon name='plus' />New Recipe</Button>\n\n <Button onClick={()=>this.setState({categoryId:el._id,onOpenEdit:true,onOpenAdd:false})}>\n<Icon name='edit' /></Button>\n\n <Button onClick={()=>{this.setState({categoryDeleteId:el._id});this.deleteCategory(el._id); this.removeElement(el._id); }}>\n <Icon name='times' /></Button>\n\n {this.state.onOpenAdd&&el._id===this.state.categoryId ?\n     <AddRecipe categoryId={this.state.categoryId} fetchList={this.fetchList} /> : ''}\n\n {this.state.onOpenEdit&&el._id===this.state.categoryId ?\n     <EditCategory title={el.title} categoryId={this.state.categoryId} newList={this.newList} /> : ''}\n\n<Route path={\"/\"+el._id} render={()=><Category updateRecipeId={this.updateRecipeId}\n  categoryId={el._id} />}   />\n\n </li>}) }\n\n{/*<Route path=\"/:el._id\" component={Category} categoryId={el._id} />*/}\n\n</div>\n<Route path={\"/recipe/\"+recipeId} render={()=><Recipe recipeId={recipeId} />} />\n    </Router>);\n\n   }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}