{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddArticle.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react'; //import Article from './Article';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass AddArticle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchListItem = () => {\n      fetch('https://test-task-server.herokuapp.com/api/v1/article/byCategory/' + this.props.categoryId).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.addListItem = value => {\n      this.setState({\n        data: [...this.state.data, value]\n      });\n      this.fetchListItem();\n    };\n\n    this.sendItem = () => {\n      const listPost = {\n        title: this.state.title,\n        text: this.state.text,\n        categoryId: this.props.categoryId\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/article/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(listPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.setState({\n          categoryId: '',\n          title: '',\n          text: ''\n        });\n      }).then(this.fetchListItem(), this.addListItem(listPost) //this.setState({onOpenEdit:false})\n      );\n    };\n\n    this.deleteItem = value => {\n      //var ItemId = this.state.ItemId;\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/Item/' + value;\n      var option = {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n      });\n      this.setState({\n        data: this.state.data.filter(el => el._id !== value)\n      }); //this.fetchListItem()\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: this.props.categoryId,\n      articleId: '',\n      title: '',\n      text: '',\n      openConfirm: false,\n      visible: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListItem();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        marginTop: -50,\n        marginLeft: 455\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.articleId, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      style: {\n        width: 350\n      },\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      onChange: this.onChangeInput,\n      style: {\n        width: 350\n      },\n      name: \"text\",\n      placeholder: \"Text of your article\",\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"List Articles of this Category:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), this.state.data.map((el, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/article\" + el._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, el.title), React.createElement(Button, {\n        style: {\n          marginLeft: 150\n        },\n        onClick: () => {\n          this.setState({\n            articleId: el._id\n          });\n          this.deleteArticle(el._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Delete\"), ' ');\n    })))));\n  }\n\n}\n\nexport default AddArticle;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddArticle.js"],"names":["React","Component","Input","TextArea","List","Grid","Image","Button","Icon","BrowserRouter","Router","Route","Switch","AddArticle","constructor","props","fetchListItem","fetch","categoryId","then","res","json","data","console","log","setState","addListItem","value","state","sendItem","listPost","title","text","qUrl","option","method","body","JSON","stringify","headers","deleteItem","filter","el","_id","onChangeInput","e","name","target","toggle","visible","error","isLoaded","articleId","openConfirm","componentDidMount","render","marginTop","marginLeft","width","map","i","deleteArticle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n//import Article from './Article';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nclass AddArticle extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  data:[],\n  error: null,\n  isLoaded: false,\n  categoryId:this.props.categoryId,\n  articleId:'',\n  title:'',\n  text:'',\n  openConfirm:false,\n  visible:false\n}\n\n}\n\nfetchListItem = () => {\nfetch('https://test-task-server.herokuapp.com/api/v1/article/byCategory/'+this.props.categoryId)\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data: data });\n                });\n\n}\n\naddListItem = (value) => {\n  this.setState({data: [...this.state.data, value]});\n  this.fetchListItem ();\n}\n\ncomponentDidMount(){\n  this.fetchListItem ();\n  }\n\n\nsendItem = () => {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.props.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/article/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    }).then(\n           this.fetchListItem(),\n           this.addListItem(listPost)\n    //this.setState({onOpenEdit:false})\n  );\n\n  }\n\ndeleteItem = (value) => {\n  //var ItemId = this.state.ItemId;\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/Item/'+value;\n  var option = {\n    method: \"DELETE\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n    });\n\n    this.setState({data: this.state.data.filter(el => el._id !==value)});\n    //this.fetchListItem()\n\n}\n\n  onChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visible:!this.state.visible})\n  }\n\n\nrender(){\n\n\n\n  return (\n <Router>\n  <Grid style={{marginTop:-50,marginLeft:455}}>\n  <Grid.Row>\n  <Grid.Column width={5}>\n  {this.state.articleId}\n  <Input onChange={this.onChangeInput} style={{width:350}} name='title' placeholder='Title' value={this.state.title}/>\n  <TextArea onChange={this.onChangeInput} style={{width:350}} name='text' placeholder='Text of your article' value={this.state.text} />\n  <Button onClick={this.sendItem} >Add</Button><br/>\n\nList Articles of this Category:<br/>\n  { this.state.data.map((el,i)=>{return <li key={i}>\n  <a href={\"/article\"+el._id}>{el.title}</a>\n  <Button style={{marginLeft:150}} onClick={()=>{this.setState({articleId:el._id});\n          this.deleteArticle(el._id) }} >Delete</Button>{' '}\n\n\n{/*\n<Route path={\"/article\"+el._id} render={()=><Article articleId={el._id} />} />\n\n{this.state.openConfirm?<Button onClick={this.deletearticle}>Yes</Button>:''}*/}\n  </li> }) }\n\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n\n\n  </Router>);\n\n}\n}\n\n\nexport default AddArticle;\n"]},"metadata":{},"sourceType":"module"}