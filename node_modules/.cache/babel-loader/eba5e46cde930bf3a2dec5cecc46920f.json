{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddRecipe.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchListRecipe = () => {\n      fetch('https://test-task-server.herokuapp.com/api/v1/recipe/byCategory/' + this.props.categoryId).then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.addListRecipe = value => {\n      this.setState({\n        data: [...this.state.data, value]\n      });\n      this.fetchListRecipe();\n    };\n\n    this.sendRecipe = () => {\n      const listPost = {\n        title: this.state.title,\n        text: this.state.text,\n        categoryId: this.props.categoryId\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(listPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.setState({\n          categoryId: '',\n          title: '',\n          text: ''\n        });\n      }).then(this.fetchListRecipe(), this.addListRecipe(listPost) //this.setState({onOpenEdit:false})\n      );\n    };\n\n    this.deleteRecipe = () => {\n      //var recipeId = this.state.recipeId;\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/' + this.state.recipeId;\n      var option = {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n      });\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: this.props.categoryId,\n      recipeId: '',\n      title: '',\n      text: '',\n      openConfirm: false,\n      visible: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchListRecipe();\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      style: {\n        marginTop: -50,\n        marginLeft: 550\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.recipeId, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      onChange: this.onChangeInput,\n      name: \"text\",\n      placeholder: \"Text of your Recipe\",\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendRecipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"List Recipes of this Category:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), this.state.data.map((el, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, el.title, React.createElement(Button, {\n        style: {\n          marginLeft: 150\n        },\n        onClick: () => {\n          this.setState({\n            recipeId: el._id\n          });\n          this.deleteRecipe();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Delete\"), ' ');\n    }))));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddRecipe.js"],"names":["React","Component","Input","TextArea","List","Grid","Image","Button","Icon","AddRecipe","constructor","props","fetchListRecipe","fetch","categoryId","then","res","json","data","console","log","setState","addListRecipe","value","state","sendRecipe","listPost","title","text","qUrl","option","method","body","JSON","stringify","headers","deleteRecipe","recipeId","onChangeInput","e","name","target","toggle","visible","error","isLoaded","openConfirm","componentDidMount","render","marginTop","marginLeft","map","el","i","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  data:[],\n  error: null,\n  isLoaded: false,\n  categoryId:this.props.categoryId,\n  recipeId:'',\n  title:'',\n  text:'',\n  openConfirm:false,\n  visible:false\n}\n\n}\n\nfetchListRecipe = () => {\nfetch('https://test-task-server.herokuapp.com/api/v1/recipe/byCategory/'+this.props.categoryId)\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data: data });\n                });\n\n}\n\naddListRecipe = (value) => {\n  this.setState({data: [...this.state.data, value]});\n  this.fetchListRecipe ();\n}\n\ncomponentDidMount(){\n  this.fetchListRecipe ();\n  }\n\n\nsendRecipe = () => {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.props.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    }).then(\n           this.fetchListRecipe(),\n           this.addListRecipe(listPost)\n    //this.setState({onOpenEdit:false})\n  );\n\n  }\n\ndeleteRecipe = () => {\n  //var recipeId = this.state.recipeId;\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/'+this.state.recipeId;\n  var option = {\n    method: \"DELETE\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n    })\n\n}\n\n  onChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visible:!this.state.visible})\n  }\n\n\nrender(){\n\n\n\n  return (\n\n  <Grid style={{marginTop:-50,marginLeft:550}}>\n  <Grid.Row>\n  <Grid.Column width={5}>\n  {this.state.recipeId}\n  <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n  <TextArea onChange={this.onChangeInput} name='text' placeholder='Text of your Recipe' value={this.state.text} />\n  <Button onClick={this.sendRecipe} >Add</Button><br/>\n\nList Recipes of this Category:<br/>\n  { this.state.data.map((el,i)=>{return <li key={i}>{el.title}\n  <Button style={{marginLeft:150}} onClick={()=>{this.setState({recipeId:el._id}); this.deleteRecipe()\n                        }} >Delete</Button>{' '}\n\n{/*{this.state.openConfirm?<Button onClick={this.deleteRecipe}>Yes</Button>:''}*/}\n  </li> }) }\n\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n\n\n  );\n\n}\n}\n\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}