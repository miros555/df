{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddCategory.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, List, Grid, Button, Icon } from 'semantic-ui-react'; //import {requestSuccess,request,requestError,fetchList} from '../actions';\n//import AddRecipe from './AddRecipe';\n\nclass AddCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendData = () => {\n      const newPost = {\n        title: this.state.title\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(newPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.props.addList(newPost);\n      }).then(this.setState({\n        title: ''\n      }));\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      visible: false,\n      onOpen: false\n    };\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      width: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Button, {\n      positive: true,\n      onClick: this.sendData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Add\")));\n  }\n\n}\n\nexport default AddCategory;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddCategory.js"],"names":["React","Component","Input","List","Grid","Button","Icon","AddCategory","constructor","props","sendData","newPost","title","state","qUrl","option","method","body","JSON","stringify","headers","fetch","then","data","console","log","addList","setState","onChangeInput","e","name","target","value","toggle","visible","posts","error","isLoaded","categoryId","text","onOpen","componentDidMount","res","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, List, Grid, Button, Icon } from 'semantic-ui-react';\n//import {requestSuccess,request,requestError,fetchList} from '../actions';\n//import AddRecipe from './AddRecipe';\n\nclass AddCategory extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  visible:false,\n  onOpen:false\n }\n\n}\n\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data });\n                });\n}\n\n\n\n\nsendData = () => {\n\n  const newPost = {\n    title: this.state.title,\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(newPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.props.addList(newPost) })\n.then(this.setState({title:''}));\n  }\n\n\nonChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visible:!this.state.visible})\n  }\n\n\n\nrender(){\n\n\n  return (\n\n\n    <Grid>\n    <Grid.Row width={3}>\n    <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n    <Button positive onClick={this.sendData} >\n      <Icon name='plus' />Add</Button>\n      </Grid.Row>\n      </Grid>\n\n\n  );\n\n}\n}\n\n\nexport default AddCategory;\n"]},"metadata":{},"sourceType":"module"}