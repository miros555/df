{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/App.js\";\nimport React, { Component } from 'react'; //import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\n\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react'; //import {requestSuccess,request,requestError,fetchList} from '../actions';\n\nimport AddRecipe from './AddRecipe';\nimport AddCategory from './AddCategory';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        visibleInputCategory: !this.state.visibleInputCategory\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      visibleInputCategory: false,\n      onOpen: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.sendData = this.sendData.bind(this); //this.addRecipe=this.addRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    });\n  }\n\n  sendData() {\n    const listPost = {\n      title: this.state.title,\n      text: this.state.text,\n      categoryId: this.state.categoryId\n    };\n    var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n    var option = {\n      //mode: 'no-cors',\n      method: \"POST\",\n      body: JSON.stringify(listPost),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }; //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    fetch(qUrl, option).then(data => {\n      console.log(\"Successful\" + data);\n      this.setState({\n        categoryId: '',\n        title: '',\n        text: ''\n      });\n    });\n  }\n  /*\n  addRecipe(){\n    this.setState({categoryId:_id})\n  }\n  */\n\n\n  onChangeInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    let list = this.state.data;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"AdminPanel\")), this.state.categoryId, this.state.visibleInputCategory ? React.createElement(AddCategory, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : '', this.state.onOpen ? React.createElement(AddRecipe, {\n      categoryId: this.state.categoryId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : '', \"!this.state.visibleInputCategory?\", React.createElement(Button, {\n      style: {\n        marginLeft: 350\n      },\n      positive: true,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"Add Category To List\"), \":\", React.createElement(Button, {\n      style: {\n        marginLeft: 350\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \"Add Category To List\"), list.map((el, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, el.title, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), el._id, \" \", React.createElement(Button, {\n        onClick: () => this.setState({\n          categoryId: el._id,\n          onOpen: true,\n          dataRecipe: []\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Add Recipe To This Category\"));\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/App.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","AddRecipe","AddCategory","App","constructor","props","toggle","setState","visibleInputCategory","state","posts","data","error","isLoaded","categoryId","title","text","onOpen","onChangeInput","bind","sendData","componentDidMount","fetch","then","res","json","console","log","listPost","qUrl","option","method","body","JSON","stringify","headers","e","name","target","value","render","list","marginLeft","map","el","index","_id","dataRecipe"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n//import {requestSuccess,request,requestError,fetchList} from '../actions';\nimport AddRecipe from './AddRecipe';\nimport AddCategory from './AddCategory';\n\n\nclass App extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  visibleInputCategory:false,\n  onOpen:false\n }\n\n this.onChangeInput=this.onChangeInput.bind(this);\n this.sendData=this.sendData.bind(this);\n //this.addRecipe=this.addRecipe.bind(this);\n}\n\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data });\n                });\n}\n\n\n\nsendData () {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.state.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    //mode: 'no-cors',\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n/*\naddRecipe(){\n  this.setState({categoryId:_id})\n}\n*/\n  onChangeInput(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle=()=>{\n    this.setState({visibleInputCategory:!this.state.visibleInputCategory})\n  }\n\n\n\nrender(){\n\n    let list = this.state.data;\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n    <h2>AdminPanel</h2>\n      </header>\n{this.state.categoryId}\n{this.state.visibleInputCategory ? <AddCategory /> : ''}\n{this.state.onOpen ? <AddRecipe categoryId={this.state.categoryId} /> : ''}\n\n!this.state.visibleInputCategory?<Button style={{marginLeft:350}} positive onClick={this.toggle}>\n<Icon name='plus' />Add Category To List</Button>:\n<Button style={{marginLeft:350}} onClick={this.toggle}>\n<Icon name='delete' />Add Category To List</Button>\n\n\n{list.map((el,index)=>{return <li key={index}>\n{el.title}<br/>\n{el._id} <Button onClick={()=>this.setState({categoryId:el._id,onOpen:true,\n      dataRecipe:[]})}>\n\n\n Add Recipe To This Category</Button>\n </li>}) }\n\n\n</div>\n  );\n\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}