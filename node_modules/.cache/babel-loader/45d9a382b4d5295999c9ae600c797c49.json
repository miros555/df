{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddRecipe.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      visible: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.sendRecipe = this.sendRecipe.bind(this);\n  }\n\n  sendRecipe() {\n    const listPost = {\n      title: this.state.title,\n      text: this.state.text,\n      categoryId: this.props.categoryId\n    };\n    var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n    var option = {\n      method: \"POST\",\n      body: JSON.stringify(listPost),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(qUrl, option).then(data => {\n      console.log(\"Successful\" + data);\n      this.setState({\n        categoryId: '',\n        title: '',\n        text: ''\n      });\n    });\n  }\n\n  onChangeInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: -50,\n        marginLeft: 350\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.onChangeInput,\n      name: \"text\",\n      placeholder: \"Text of your Recipe\",\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      positive: true,\n      onClick: this.sendRecipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \"Add\"));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddRecipe.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","AddRecipe","constructor","props","toggle","setState","visible","state","data","error","isLoaded","categoryId","title","text","onChangeInput","bind","sendRecipe","listPost","qUrl","option","method","body","JSON","stringify","headers","fetch","then","console","log","e","name","target","value","render","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  visible:false\n }\n\n this.onChangeInput=this.onChangeInput.bind(this);\n this.sendRecipe=this.sendRecipe.bind(this);\n}\n\n\n\nsendRecipe () {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.props.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n\n  onChangeInput(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle=()=>{\n    this.setState({visible:!this.state.visible})\n  }\n\n\n\nrender(){\n\n\n\n\n\n  return (\n\n  <div  style={{marginTop:-50,marginLeft:350}}>\n  <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n  <textarea onChange={this.onChangeInput} name='text' placeholder='Text of your Recipe' value={this.state.text} />\n  <Button positive onClick={this.sendRecipe} >\n  <Icon name='plus' />Add</Button>\n  </div>\n\n  );\n\n}\n}\n\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}