{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddRecipe.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendRecipe = () => {\n      const listPost = {\n        title: this.state.title,\n        text: this.state.text,\n        categoryId: this.props.categoryId\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(listPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.setState({\n          categoryId: '',\n          title: '',\n          text: ''\n        });\n      });\n    };\n\n    this.deleteRecipe = () => {\n      //var recipeId = this.state.recipeId;\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/' + this.state.recipeId;\n      var option = {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n      });\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: this.props.categoryId,\n      recipeId: '',\n      title: '',\n      text: '',\n      openConfirm: false,\n      visible: false\n    };\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    fetch('https://test-task-server.herokuapp.com/api/v1/recipe/byCategory/' + this.props.categoryId).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      style: {\n        marginTop: -50,\n        marginLeft: 550\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.recipeId, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      onChange: this.onChangeInput,\n      name: \"text\",\n      placeholder: \"Text of your Recipe\",\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendRecipe,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"List Recipes of this Category:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), this.state.data.map((el, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, el.title, React.createElement(Button, {\n        style: {\n          marginTop: -50,\n          marginLeft: 650\n        },\n        onClick: () => {\n          this.setState({\n            recipeId: el._id\n          }).then(this.deleteRecipe);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Delete\"), ' ');\n    }))));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddRecipe.js"],"names":["React","Component","Input","TextArea","List","Grid","Image","Button","Icon","AddRecipe","constructor","props","sendRecipe","listPost","title","state","text","categoryId","qUrl","option","method","body","JSON","stringify","headers","fetch","then","data","console","log","setState","deleteRecipe","recipeId","onChangeInput","e","name","target","value","toggle","visible","error","isLoaded","openConfirm","componentDidMount","res","json","render","marginTop","marginLeft","map","el","i","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, TextArea, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n\nclass AddRecipe extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  data:[],\n  error: null,\n  isLoaded: false,\n  categoryId:this.props.categoryId,\n  recipeId:'',\n  title:'',\n  text:'',\n  openConfirm:false,\n  visible:false\n}\n\n}\n\n\ncomponentDidMount(){\n    //this.props.dispatch(fetchList());\n  fetch('https://test-task-server.herokuapp.com/api/v1/recipe/byCategory/'+this.props.categoryId)\n              .then((res) => { return res.json() })\n              .then((data) => {\n                  console.log(data);\n                  this.setState({ data: data });\n                  });\n  }\n\n\nsendRecipe = () => {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.props.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\ndeleteRecipe = () => {\n  //var recipeId = this.state.recipeId;\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/'+this.state.recipeId;\n  var option = {\n    method: \"DELETE\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n    })\n\n}\n\n  onChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visible:!this.state.visible})\n  }\n\n\nrender(){\n\n\n\n  return (\n\n  <Grid style={{marginTop:-50,marginLeft:550}}>\n  <Grid.Row>\n  <Grid.Column width={5}>\n  {this.state.recipeId}\n  <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n  <TextArea onChange={this.onChangeInput} name='text' placeholder='Text of your Recipe' value={this.state.text} />\n  <Button onClick={this.sendRecipe} >Add</Button><br/>\n\nList Recipes of this Category:<br/>\n  { this.state.data.map((el,i)=>{return <li key={i}>{el.title}\n  <Button style={{marginTop:-50,marginLeft:650}} onClick={()=>{this.setState({recipeId:el._id}).then(this.deleteRecipe)\n                        }} >Delete</Button>{' '}\n\n{/*{this.state.openConfirm?<Button onClick={this.deleteRecipe}>Yes</Button>:''}*/}\n  </li> }) }\n\n  </Grid.Column>\n  </Grid.Row>\n  </Grid>\n\n\n  );\n\n}\n}\n\n\nexport default AddRecipe;\n"]},"metadata":{},"sourceType":"module"}