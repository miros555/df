{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/BlockTree.js\";\nimport React, { Component } from 'react'; //import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\n\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react'; //import {requestSuccess,request,requestError,fetchList} from '../actions';\n\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\nimport Category from './Category';\nimport AddCategory from './AddCategory';\nimport EditCategory from './EditCategory';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //import {fetchList} from '../actions';\n\nclass BlockTree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchList = () => {\n      fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          data\n        });\n      });\n    };\n\n    this.addList = value => {\n      this.setState({\n        data: [...this.state.data, value]\n      });\n      this.fetchList();\n    };\n\n    this.newList = () => {\n      this.fetchList();\n      this.forceUpdate();\n      this.setState({\n        onOpenEdit: false\n      });\n    };\n\n    this.removeElement = value => {\n      this.setState({\n        data: this.state.data.filter(el => el._id !== value)\n      });\n    };\n\n    this.sendData = () => {\n      const listPost = {\n        title: this.state.title,\n        text: this.state.text,\n        categoryId: this.state.categoryId\n      };\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n      var option = {\n        method: \"POST\",\n        body: JSON.stringify(listPost),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }; //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n        this.setState({\n          categoryId: '',\n          title: '',\n          text: ''\n        });\n      });\n    };\n\n    this.deleteCategory = value => {\n      var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/' + value;\n      var option = {\n        method: \"DELETE\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch(qUrl, option).then(data => {\n        console.log(\"Successful\" + data);\n      });\n    };\n\n    this.onChangeInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        visibleInputCategory: !this.state.visibleInputCategory\n      });\n    };\n\n    this.onOpenAddchild = value => {\n      this.setState({\n        onOpenAddchildCat: value\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      parentId: '',\n      title: '',\n      text: '',\n      categoryDeleteId: '',\n      visibleInputCategory: false,\n      onOpenAdd: false,\n      onOpenAddchildCat: false,\n      onOpenEdit: false\n    };\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    this.fetchList();\n  }\n\n  render() {\n    let list = this.state.data;\n    let listSelected = list.filter(el => el.parentId == null);\n    let listChildCat = list.filter(el => el.parentId === this.props.parentId); //listSelected.push(listChildCat);\n\n    {\n      /*  listSelected = [...listSelected, listChildCat];  */\n    }\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, listChildCat.map((el, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          marginLeft: 20,\n          width: 350\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, el._id), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"/category/\" + el._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.setState({\n          title: el.title\n        }),\n        style: {\n          width: 130\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#2874A6'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, el.title))), React.createElement(Button, {\n        size: \"mini\",\n        positive: true,\n        onClick: () => this.setState({\n          categoryId: el._id,\n          parentId: el._id,\n          title: el.title,\n          onOpenEdit: false,\n          onOpenAddchildCat: !this.state.onOpenAddchildCat,\n          onOpenEdit: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \"Add Child Category\"), React.createElement(Button, {\n        size: \"mini\",\n        positive: true,\n        onClick: () => this.setState({\n          categoryId: el._id,\n          title: el.title,\n          onOpenAdd: !this.state.onOpenAdd,\n          onOpenAddchildCat: false,\n          onOpenEdit: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \"New Recipe\"), React.createElement(Button, {\n        size: \"mini\",\n        onClick: () => this.setState({\n          categoryId: el._id,\n          onOpenEdit: !this.state.onOpenEdit,\n          onOpenAddchildCat: false,\n          onOpenAdd: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Button, {\n        size: \"mini\",\n        onClick: () => {\n          this.setState({\n            categoryDeleteId: el._id\n          });\n          this.deleteCategory(el._id);\n          this.removeElement(el._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), this.state.onOpenAddchildCat && el._id === this.state.categoryId ? React.createElement(AddCategory, {\n        parentId: el._id,\n        onOpenAddchild: this.onOpenAddchild,\n        addList: this.addList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }) : '', this.state.onOpenAdd && el._id === this.state.categoryId ? React.createElement(AddRecipe, {\n        categoryId: this.state.categoryId,\n        fetchList: this.fetchList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }) : '', this.state.onOpenEdit && el._id === this.state.categoryId ? React.createElement(EditCategory, {\n        title: el.title,\n        categoryId: this.state.categoryId,\n        newList: this.newList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }) : '', React.createElement(BlockTree, {\n        parentId: el._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/category/\" + el._id,\n        render: () => React.createElement(Category, {\n          categoryId: el._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default BlockTree;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/BlockTree.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","AddRecipe","Recipe","Category","AddCategory","EditCategory","BrowserRouter","Router","Route","Switch","BlockTree","constructor","props","fetchList","fetch","then","res","json","data","console","log","setState","addList","value","state","newList","forceUpdate","onOpenEdit","removeElement","filter","el","_id","sendData","listPost","title","text","categoryId","qUrl","option","method","body","JSON","stringify","headers","deleteCategory","onChangeInput","e","name","target","toggle","visibleInputCategory","onOpenAddchild","onOpenAddchildCat","posts","error","isLoaded","parentId","categoryDeleteId","onOpenAdd","componentDidMount","render","list","listSelected","listChildCat","map","index","marginLeft","width","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n//import {requestSuccess,request,requestError,fetchList} from '../actions';\nimport AddRecipe from './AddRecipe';\nimport Recipe from './Recipe';\nimport Category from './Category';\nimport AddCategory from './AddCategory';\nimport EditCategory from './EditCategory';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n//import {fetchList} from '../actions';\n\n\nclass BlockTree extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  parentId:'',\n  title:'',\n  text:'',\n  categoryDeleteId:'',\n  visibleInputCategory:false,\n  onOpenAdd:false,\n  onOpenAddchildCat:false,\n  onOpenEdit:false\n }\n\n}\n\n\nfetchList = () => {\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n          .then((res) => { return res.json() })\n          .then((data) => {\n              console.log(data);\n              this.setState({ data });\n              });\n        }\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  this.fetchList();\n}\n\naddList = (value) => {\n  this.setState({data:[...this.state.data, value]});\n  this.fetchList();\n}\n\nnewList = () => {\n  this.fetchList();\n  this.forceUpdate();\n  this.setState({onOpenEdit:false})\n\n}\n\nremoveElement = (value) => {\n    this.setState({\n        data: this.state.data.filter(el => el._id !== value)\n    })\n}\n\nsendData = () => {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.state.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n\ndeleteCategory = (value) => {\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/'+value;\n  var option = {\n    method: \"DELETE\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n  };\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n    })\n}\n\n  onChangeInput = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle = () => {\n    this.setState({visibleInputCategory:!this.state.visibleInputCategory})\n  }\n\nonOpenAddchild = (value) => {\n  this.setState({onOpenAddchildCat:value})\n}\n\nrender(){\n\n    let list = this.state.data;\n    let listSelected = list.filter(el => el.parentId==null);\n    let listChildCat = list.filter(el => el.parentId===this.props.parentId);\n\n    //listSelected.push(listChildCat);\n\n  {/*  listSelected = [...listSelected, listChildCat];  */}\n\n\n\n  return (\n\n<Router>\n\n<div>\n\n {listChildCat.map((el,index)=>{return <li key={index}>\n <span style={{marginLeft:20,width:350}}>{el._id}</span><br/>\n <a href={\"/category/\"+el._id}>\n <button onClick={()=>this.setState({title:el.title})} style={{width:130}}>{/*{el.title}*/}\n <span style={{color:'#2874A6'}}>{el.title}</span></button></a>\n\n\n{/************************************************************/}\n\n <Button size='mini' positive onClick={()=>this.setState({categoryId:el._id, parentId:el._id,\n                    title:el.title, onOpenEdit:false, onOpenAddchildCat:!this.state.onOpenAddchildCat,\n                    onOpenEdit:false})}>\n  <Icon name='plus' />Add Child Category</Button>\n\n\n <Button size='mini' positive onClick={()=>this.setState({categoryId:el._id,\n                    title:el.title, onOpenAdd:!this.state.onOpenAdd,\n                    onOpenAddchildCat:false, onOpenEdit:false})}>\n  <Icon name='plus' />New Recipe</Button>\n\n  <Button size='mini' onClick={()=>this.setState({categoryId:el._id,\n                     onOpenEdit:!this.state.onOpenEdit, onOpenAddchildCat:false, onOpenAdd:false})}>\n <Icon name='edit' /></Button>\n\n  <Button size='mini' onClick={()=>{this.setState({categoryDeleteId:el._id});this.deleteCategory(el._id); this.removeElement(el._id); }}>\n  <Icon name='times' /></Button>\n\n  {this.state.onOpenAddchildCat&&el._id===this.state.categoryId ?\n      <AddCategory parentId={el._id} onOpenAddchild={this.onOpenAddchild} addList={this.addList}/> : ''}\n\n  {this.state.onOpenAdd&&el._id===this.state.categoryId ?\n      <AddRecipe categoryId={this.state.categoryId} fetchList={this.fetchList} /> : ''}\n\n  {this.state.onOpenEdit&&el._id===this.state.categoryId ?\n      <EditCategory title={el.title} categoryId={this.state.categoryId} newList={this.newList} /> : ''}\n\n\n\n\n\n<BlockTree parentId={el._id} />\n\n\n\n\n <Route path={\"/category/\"+el._id} render={()=><Category categoryId={el._id} />}   />\n\n\n{/****************************************************************/}\n\n\n </li>}) }\n\n</div>\n\n\n\n    </Router>);\n\n   }\n}\n\n\nexport default BlockTree;\n"]},"metadata":{},"sourceType":"module"}