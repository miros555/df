{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/AddCategory.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react'; //import {requestSuccess,request,requestError,fetchList} from '../actions';\n//import AddRecipe from './AddRecipe';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      visible: false,\n      onOpen: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.sendData = this.sendData.bind(this); //this.addRecipe=this.addRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    });\n  }\n\n  sendData() {\n    const listPost = {\n      title: this.state.title,\n      categoryId: this.state.categoryId\n    };\n    var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/create';\n    var option = {\n      //mode: 'no-cors',\n      method: \"POST\",\n      body: JSON.stringify(listPost),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }; //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    fetch(qUrl, option).then(data => {\n      console.log(\"Successful\" + data);\n      this.setState({\n        categoryId: '',\n        title: '',\n        text: ''\n      });\n    });\n  }\n\n  onChangeInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"categoryId\",\n      placeholder: \"Category\",\n      value: this.state.categoryId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Input, {\n      onChange: this.onChangeInput,\n      name: \"title\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.onChangeInput,\n      name: \"text\",\n      placeholder: \"Recipe\",\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      positive: true,\n      onClick: this.sendData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \"Add\"));\n  }\n\n}\n\nexport default AddCategory;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/AddCategory.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","App","constructor","props","toggle","setState","visible","state","posts","data","error","isLoaded","categoryId","title","text","onOpen","onChangeInput","bind","sendData","componentDidMount","fetch","then","res","json","console","log","listPost","qUrl","option","method","body","JSON","stringify","headers","e","name","target","value","render","AddCategory"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\n//import {requestSuccess,request,requestError,fetchList} from '../actions';\n//import AddRecipe from './AddRecipe';\n\nclass App extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  visible:false,\n  onOpen:false\n }\n\n this.onChangeInput=this.onChangeInput.bind(this);\n this.sendData=this.sendData.bind(this);\n //this.addRecipe=this.addRecipe.bind(this);\n}\n\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data });\n                });\n}\n\n\n\n\nsendData () {\n\n  const listPost = {\n    title: this.state.title,\n    categoryId: this.state.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/category/create';\n  var option = {\n    //mode: 'no-cors',\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n  onChangeInput(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle=()=>{\n    this.setState({visible:!this.state.visible})\n  }\n\n\n\nrender(){\n\n\n  return (\n\n    <div>\n    <Input onChange={this.onChangeInput} name='categoryId' placeholder='Category' value={this.state.categoryId}/>\n    <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n    <textarea onChange={this.onChangeInput} name='text' placeholder='Recipe' value={this.state.text} />\n    <Button positive onClick={this.sendData} >\n      <Icon name='plus' />Add</Button>\n         </div>\n\n  );\n\n}\n}\n\n\nexport default AddCategory;\n"]},"metadata":{},"sourceType":"module"}