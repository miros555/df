{"ast":null,"code":"var _jsxFileName = \"/Users/admin/github/df/src/components/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"../logo.svg\"; //import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\n\nimport '../App.css';\nimport { Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\nimport { requestSuccess, request, requestError, fetchList } from '../actions';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        visible: !this.state.visible\n      });\n    };\n\n    this.state = {\n      posts: [],\n      data: [],\n      error: null,\n      isLoaded: false,\n      categoryId: '',\n      title: '',\n      text: '',\n      visible: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n    this.sendData = this.sendData.bind(this);\n  }\n\n  componentDidMount() {\n    //this.props.dispatch(fetchList());\n    fetch('https://test-task-server.herokuapp.com/api/v1/category/all').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        data\n      });\n    });\n  }\n\n  sendData() {\n    const listPost = {\n      title: this.state.title,\n      text: this.state.text,\n      categoryId: this.state.categoryId\n    };\n    var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n    var option = {\n      mode: 'no-cors',\n      method: \"POST\",\n      body: JSON.stringify(listPost),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }; //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    fetch(qUrl, option).then(data => {\n      console.log(\"Successful\" + data);\n      this.setState({\n        categoryId: '',\n        title: '',\n        text: ''\n      });\n    });\n  }\n\n  onChangeInput(e) {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    let list = this.state.data;\n    let addInput;\n\n    if (this.state.visible) {\n      addInput = React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        className: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: this.onChangeInput,\n        name: \"categoryId\",\n        placeholder: \"Category\",\n        value: this.state.categoryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onChange: this.onChangeInput,\n        name: \"title\",\n        placeholder: \"Title\",\n        value: this.state.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        onChange: this.onChangeInput,\n        name: \"text\",\n        placeholder: \"Recipe\",\n        value: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Button, {\n        positive: true,\n        onClick: this.sendData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"Add\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.categoryId, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"AdminPanel555\"), React.createElement(Button, {\n      style: {\n        marginTop: -50,\n        marginLeft: 50\n      },\n      positive: true,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \"Add To List\"), addInput), list.map((el, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, el.title, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), el._id);\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/github/df/src/components/App.js"],"names":["React","Component","Input","List","Grid","Image","Button","Icon","requestSuccess","request","requestError","fetchList","App","constructor","props","toggle","setState","visible","state","posts","data","error","isLoaded","categoryId","title","text","onChangeInput","bind","sendData","componentDidMount","fetch","then","res","json","console","log","listPost","qUrl","option","mode","method","body","JSON","stringify","headers","e","name","target","value","render","list","addInput","color","marginTop","marginLeft","map","el","index","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.svg';\n//import {connect} from 'react-redux';\n//import {bindActionCreators} from 'redux';\nimport '../App.css';\nimport {Input, List, Grid, Image, Button, Icon } from 'semantic-ui-react';\nimport {requestSuccess,request,requestError,fetchList} from '../actions';\n\nclass App extends Component {\nconstructor(props){\nsuper(props);\nthis.state={\n  posts: [],\n  data: [],\n  error: null,\n  isLoaded: false,\n  categoryId:'',\n  title:'',\n  text:'',\n  visible:false\n }\n\n this.onChangeInput=this.onChangeInput.bind(this);\n this.sendData=this.sendData.bind(this);\n}\n\ncomponentDidMount(){\n  //this.props.dispatch(fetchList());\n  fetch('https://test-task-server.herokuapp.com/api/v1/category/all')\n            .then((res) => { return res.json() })\n            .then((data) => {\n                console.log(data);\n                this.setState({ data });\n                });\n}\n\n\n\n\nsendData () {\n\n  const listPost = {\n    title: this.state.title,\n    text: this.state.text,\n    categoryId: this.state.categoryId\n  };\n  var qUrl = 'https://test-task-server.herokuapp.com/api/v1/recipe/create';\n  var option = {\n    mode: 'no-cors',\n    method: \"POST\",\n    body: JSON.stringify(listPost),\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n};\n  //const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(qUrl, option).then(data =>{\n          console.log(\"Successful\" + data);\n\n          this.setState({\n            categoryId:'',\n            title:'',\n            text:''\n        });\n    })\n\n\n  }\n\n\n  onChangeInput(e) {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({[name]: value});\n    }\n\n  toggle=()=>{\n    this.setState({visible:!this.state.visible})\n  }\n\n\n\nrender(){\n\n    let list = this.state.data;\n\n\n    let addInput;\n\n\n    if (this.state.visible){\n      addInput = <Grid>\n      <div style={{color:'red'}} className='panel panel-default'>\n      <Input onChange={this.onChangeInput} name='categoryId' placeholder='Category' value={this.state.categoryId}/>\n      <Input onChange={this.onChangeInput} name='title' placeholder='Title' value={this.state.title}/>\n      <textarea onChange={this.onChangeInput} name='text' placeholder='Recipe' value={this.state.text} />\n        <Button positive onClick={this.sendData} >\n        <Icon name='plus' />Add</Button>\n          </div>\n          </Grid>\n    }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n\n  {this.state.categoryId}\n      <h2>AdminPanel555</h2>\n      <Button style={{marginTop:-50,marginLeft:50}} positive onClick={this.toggle}>\n       <Icon name='plus' />Add To List</Button>\n       {addInput}\n      </header>\n      {list.map((el,index)=>{ return <li\n      key={index}>{el.title}<br/>{el._id}</li>}) }\n\n\n      </div>\n  );\n\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}